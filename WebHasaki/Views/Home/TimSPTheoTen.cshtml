@{
    ViewBag.Title = "TimKiem";
    Layout = "~/Views/Shared/_LayoutTrangChu.cshtml";
}

<link href="~/Content/CSS/User/csstimkiem.css" rel="stylesheet" />
<link href="~/Content/CSS/User/cssdanhmuc.css" rel="stylesheet" />

<div class="container-hangmoive">
    <aside class="sidebar">
        <section>
            <h2>KHOẢNG GIÁ</h2>
            <ul>
                <li><a href="@Url.Action("TimSPTheoTen", "Home", new { tenSanPham = ViewBag.TenSanPham, maxPrice = 100000 })">Dưới 100.000đ</a></li>
                <li><a href="@Url.Action("TimSPTheoTen", "Home", new { tenSanPham = ViewBag.TenSanPham, minPrice = 100000, maxPrice = 200000 })">100.000đ - 200.000đ</a></li>
                <li><a href="@Url.Action("TimSPTheoTen", "Home", new { tenSanPham = ViewBag.TenSanPham, minPrice = 200000, maxPrice = 300000 })">200.000đ - 300.000đ</a></li>
                <li><a href="@Url.Action("TimSPTheoTen", "Home", new { tenSanPham = ViewBag.TenSanPham, minPrice = 300000, maxPrice = 500000 })">300.000đ - 500.000đ</a></li>
                <li><a href="@Url.Action("TimSPTheoTen", "Home", new { tenSanPham = ViewBag.TenSanPham, minPrice = 500000 })">Trên 500.000đ</a></li>
            </ul>
        </section>
        <section>
            <h2>THƯƠNG HIỆU</h2>
            <ul>
                <li><a href="@Url.Action("TimSPTheoTen", "Home", new { tenSanPham = ViewBag.TenSanPham, brandName = "L'Oreal" })">L'Oreal</a></li>
                <li><a href="@Url.Action("TimSPTheoTen", "Home", new { tenSanPham = ViewBag.TenSanPham, brandName = "Vaseline" })">Vaseline</a></li>
                <li><a href="@Url.Action("TimSPTheoTen", "Home", new { tenSanPham = ViewBag.TenSanPham, brandName = "Dove" })">Dove</a></li>
                <li><a href="@Url.Action("TimSPTheoTen", "Home", new { tenSanPham = ViewBag.TenSanPham, brandName = "Klairs's" })">Klairs's</a></li>
                <li><a href="@Url.Action("TimSPTheoTen", "Home", new { tenSanPham = ViewBag.TenSanPham, brandName = "La Roche-Posay" })">La Roche-Posay</a></li>
                <li><a href="@Url.Action("TimSPTheoTen", "Home", new { tenSanPham = ViewBag.TenSanPham, brandName = "DHC" })">DHC</a></li>
            </ul>
        </section>
    </aside>

    <div class="container-suckhoelamdep">
        <div class="header-suckhoelamdep">
            @if (ViewBag.nameCate == null)
            {
                <h1>Sức Khỏe - Làm Đẹp</h1>
            }
            else
            {
                <h1>@ViewBag.nameCate</h1>
            }
            <span>(@ViewBag.SPTimKiem.Count sản phẩm)</span>
        </div>
        <div class="filters-suckhoelamdep">
            <div>
                <span>Sắp xếp</span>
                <a href="@Url.Action("TimSPTheoTen", "Home", new { tenSanPham = ViewBag.TenSanPham, sort = "moi-nhat" })" class="btn-sort @(ViewBag.Sort == "moi-nhat" ? "active" : "")">Mới nhất</a>
                <a href="@Url.Action("TimSPTheoTen", "Home", new { tenSanPham = ViewBag.TenSanPham, sort = "ban-chay" })" class="btn-sort @(ViewBag.Sort == "ban-chay" ? "active" : "")">Bán chạy</a>
                <a href="@Url.Action("TimSPTheoTen", "Home", new { tenSanPham = ViewBag.TenSanPham, sort = "gia-thap-cao" })" class="btn-sort @(ViewBag.Sort == "gia-thap-cao" ? "active" : "")">Giá thấp đến cao</a>
                <a href="@Url.Action("TimSPTheoTen", "Home", new { tenSanPham = ViewBag.TenSanPham, sort = "gia-cao-thap" })" class="btn-sort @(ViewBag.Sort == "gia-cao-thap" ? "active" : "")">Giá cao đến thấp</a>
            </div>
        </div>

        <div class="sanpham-dm">
            <div class="sp-row-dm">
                @if (ViewBag.SPTimKiem != null && ViewBag.SPTimKiem.Count > 0)
                {
                    foreach (var item in ViewBag.SPTimKiem as List<WebHasaki.Models.Product>)
                    {
                        <a href="@Url.Action("ChiTietSP", "Home", new { id = item.ProductID })">
                            <div class="product-card">
                                <img src="@item.Image" height="220" width="220" />
                                <div class="product-info">
                                    <h3>@item.ProductName</h3>
                                    <p>@item.Description</p>
                                    <p class="price">
                                        @item.Price.ToString("N0")đ
                                        @if (item.PriceSale.HasValue)
                                        {
                                            <span class="old-price">@item.PriceSale.Value.ToString("N0")đ</span>
                                        }
                                        <span class="discount">@item.Discount%</span>
                                    </p>
                                    <div class="rating">
                                        <i class="fas fa-star"></i><i class="fas fa-star"></i><i class="fas fa-star"></i><i class="fas fa-star"></i><i class="fas fa-star-half-alt"></i>
                                        <span class="reviews">(874)</span>
                                    </div>
                                </div>
                            </div>
                        </a>
                    }
                }
                else
                {
                    <p>Không tìm thấy sản phẩm nào.</p>
                }
            </div>

            <div class="pagination">
                @if (ViewBag.TotalPages > 1)
                {
                    // Nút "Trang trước"
                    if (ViewBag.CurrentPage > 1)
                    {
                        <a href="@Url.Action("TimSPTheoTen", "Home", new { tenSanPham = ViewBag.TenSanPham, minPrice = ViewBag.MinPrice, maxPrice = ViewBag.MaxPrice, categoryName = ViewBag.CategoryName, brandName = ViewBag.BrandName, sort = ViewBag.Sort, page = ViewBag.CurrentPage - 1 })">« Trang trước</a>
                    }

                    // Tính toán phạm vi trang hiển thị
                    int startPage = Math.Max(1, ViewBag.CurrentPage - 2);
                    int endPage = Math.Min(ViewBag.TotalPages, ViewBag.CurrentPage + 2);

                    if (startPage > 1)
                    {
                        <a href="@Url.Action("TimSPTheoTen", "Home", new { tenSanPham = ViewBag.TenSanPham, minPrice = ViewBag.MinPrice, maxPrice = ViewBag.MaxPrice, categoryName = ViewBag.CategoryName, brandName = ViewBag.BrandName, sort = ViewBag.Sort, page = 1 })">1</a>
                        if (startPage > 2)
                        { <span>...</span> }
                    }

                    // Hiển thị các số trang
                    for (int i = startPage; i <= endPage; i++)
                    {
                        <a href="@Url.Action("TimSPTheoTen", "Home", new { tenSanPham = ViewBag.TenSanPham, minPrice = ViewBag.MinPrice, maxPrice = ViewBag.MaxPrice, categoryName = ViewBag.CategoryName, brandName = ViewBag.BrandName, sort = ViewBag.Sort, page = i })" class="@(i == ViewBag.CurrentPage ? "active" : "")">@i</a>
                    }

                    if (endPage < ViewBag.TotalPages)
                    {
                        if (endPage < ViewBag.TotalPages - 1)
                        { <span>...</span> }
                        <a href="@Url.Action("TimSPTheoTen", "Home", new { tenSanPham = ViewBag.TenSanPham, minPrice = ViewBag.MinPrice, maxPrice = ViewBag.MaxPrice, categoryName = ViewBag.CategoryName, brandName = ViewBag.BrandName, sort = ViewBag.Sort, page = ViewBag.TotalPages })">@ViewBag.TotalPages</a>
                    }

                    // Nút "Trang sau"
                    if (ViewBag.CurrentPage < ViewBag.TotalPages)
                    {
                        <a href="@Url.Action("TimSPTheoTen", "Home", new { tenSanPham = ViewBag.TenSanPham, minPrice = ViewBag.MinPrice, maxPrice = ViewBag.MaxPrice, categoryName = ViewBag.CategoryName, brandName = ViewBag.BrandName, sort = ViewBag.Sort, page = ViewBag.CurrentPage + 1 })">Trang sau »</a>
                    }
                }
            </div>
        </div>
    </div>
</div>

<style>
    .btn-sort {
        display: inline-block;
        padding: 10px 20px;
        margin: 5px;
        background-color: #f8f8f8;
        color: #333;
        text-decoration: none;
        border: 1px solid #ccc;
        border-radius: 4px;
        cursor: pointer;
        font-size: 14px;
        transition: background-color 0.3s, color 0.3s;
    }

        .btn-sort.active {
            background-color: #4CAF50;
            color: white;
            border-color: #4CAF50;
        }

        .btn-sort:hover:not(.active) {
            background-color: #e0e0e0;
            color: #333;
        }

    .pagination {
        margin-top: 20px;
        text-align: center;
    }

        .pagination a {
            padding: 8px 16px;
            text-decoration: none;
            color: #333;
            border: 1px solid #ddd;
            margin: 0 4px;
            border-radius: 4px;
            transition: background-color 0.3s;
        }

            .pagination a.active {
                background-color: #4CAF50;
                color: white;
                border: 1px solid #4CAF50;
            }

            .pagination a:hover:not(.active) {
                background-color: #ddd;
            }

        .pagination span {
            padding: 8px 16px;
            color: #666;
        }
</style>